@model BigShop___.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_DashBoardLayout.cshtml";
}


<div class="container-fluid px-4">
    <h2 class="mt-4">Edit Product</h2>
    <hr />
    <div class="form-horizontal d-flex justify-content-center">


        <div class=" col-lg-9 col-md-9 col-sm-9 col-xs-9">
            @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ProductID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 mt-2">
                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductStock, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 mt-2">
                            @Html.EditorFor(model => model.ProductStock, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductStock, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductRate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 mt-2">
                            @Html.EditorFor(model => model.ProductRate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductRate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductOldPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 mt-2">
                            @Html.EditorFor(model => model.ProductOldPrice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductOldPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductNewPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 mt-2">
                            @Html.EditorFor(model => model.ProductNewPrice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductNewPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 mt-2">
                            @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductHasOffer, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 mt-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.ProductHasOffer)
                                @Html.ValidationMessageFor(model => model.ProductHasOffer, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 mt-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsDeleted)
                                @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductOfferValue, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 mt-2">
                            @Html.EditorFor(model => model.ProductOfferValue, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductOfferValue, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductImageURL, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 mt-2">
                            @Html.EditorFor(model => model.ProductImageURL, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductImageURL, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 mt-2">
                            @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("image product", htmlAttributes: new { @class = "control-label col-md-2" })

                        <div class="col-md-10 mt-2">
                            <input type="file" name="Image">
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

        </div>
    </div>
</div>
